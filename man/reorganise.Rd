% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reorganise.R
\name{reorganise}
\alias{reorganise}
\title{Reorganise a table}
\usage{
reorganise(input = NULL, schema = NULL)
}
\arguments{
\item{input}{[\code{data.frame(1)}]\cr table to reorganise.}

\item{schema}{[\code{symbol(1)}]\cr the schema description of \code{input}.}
}
\value{
A (tidy) table which is the result of reorganising \code{input} based
  on \code{schema}.
}
\description{
This function takes a disorganised messy table and rearranges columns and
rows into a tidy table.
}
\examples{
library(readr)
library(magrittr)

# read in a disorganised messy dataset (without column names)
ds <- system.file("test_datasets", package = "tabshiftr")
(input <- read_csv(file = paste0(ds, "/distinct_variable.csv"),
                   col_names = FALSE, col_types = cols(.default = "c")))

# put together schema description (see vignette)
schema <- setCluster(id = "territories",
  left = c(1, 1, 4), top = c(1, 8, 8)) \%>\%
  setIDVar(name = "territories", columns = c(1, 1, 4), rows = c(2, 9, 9)) \%>\%
  setIDVar(name = "year", columns = 4, rows = c(3:6), distinct = TRUE) \%>\%
  setIDVar(name = "commodities", columns = c(1, 1, 4)) \%>\%
  setObsVar(name = "harvested", columns = c(2, 2, 5)) \%>\%
  setObsVar(name = "production", columns = c(3, 3, 6))

# get the tidy output
reorganise(input, schema)
}
