% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reorganise.R
\name{reorganise}
\alias{reorganise}
\title{Reorganise a table}
\usage{
reorganise(input = NULL, schema = NULL)
}
\arguments{
\item{input}{[\code{data.frame(1)}]\cr table to reorganise.}

\item{schema}{[\code{symbol(1)}]\cr the schema description for reorganising
\code{input}.}
}
\value{
A (tidy) table which is the result of employing \code{schema} on
  \code{input}.
}
\description{
This function takes a disorganised messy table and rearranges columns and
rows into a tidy table.
}
\examples{

# read in a disorganised messy dataset (without column names)
library(readr)
library(magrittr)
ds <- system.file("test_datasets", package = "tabshiftr")
input <- read_csv(file = paste0(ds, "/table_mismatch_3.csv"),
                  col_names = FALSE, col_types = cols(.default = "c"))
input

# put together schema description
schema <- setCluster(id = "territories", top = c(1, 8, 8), left = c(1, 1, 4),
                     width = 3, height = 6) \%>\%
  setHeader(rows = 1, relative = TRUE) \%>\%
  setIDVar(name = "territories", columns = 1, row = 2, relative = TRUE) \%>\%
  setIDVar(name = "year", columns = 4, row = c(3:6), distinct = TRUE) \%>\%
  setIDVar(name = "commodities", columns = 1, relative = TRUE) \%>\%
  setObsVar(name = "harvested", unit = "ha", columns = 2, relative = TRUE) \%>\%
  setObsVar(name = "production", unit = "t", columns = 3, relative = TRUE)

# get the tidy output
reorganise(input, schema)
}
